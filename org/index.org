#+SETUPFILE: base-template.org
#+TITLE: Algo & Prog avec R
#+SUBTITLE: Université Côte d'Azur
#+AUTHOR: A. Malapert
#+OPTIONS: H:4 num:2 toc:2
#+HTML_LINK_UP:
#+HTML_LINK_HOME:
* Tasks                                                   :noexport:TEACHING:
** TODO Exercice sur le calcul de la note finale en session 1 et 2.
- Exercice au TP 2 avec seulement deux notes d'activités, puis au TP 6 avec un vecteur
- Exercice UCAnCODE pour la première version. Pour la seconde ?
- Mini-projet shiny
** TODO https://mgimond.github.io/ES218/index.html
 Added: [2018-06-14 jeu. 17:26]
** TODO simulation [[https://blogdemaths.wordpress.com/2015/02/23/arnaquez-vos-amis-a-pile-ou-face/][pile ou face]]
   https://en.wikipedia.org/wiki/Penney%27s_game
** STARTED Générer le n-ième mot d'un language

 #+BEGIN_SRC R
   GetWords <- function(n, k, alphabet = c('a', 'b')) {
     ## Get the n-nth words with k letters using a given alphabet.
     stopifnot( n >= 0, length(k) == 1, k > 0, length(alphabet) > 0)
     m <- length(alphabet);
     ## Get a single word
     GetWord <- function(x) {
       ## Create an empty word filled with '0'
       word <- rep(alphabet[1], k)
       i <- k
       ## Convert the number 'x' to base 'm'
       while(x > 0) {
         word[i] <- alphabet[(x %% m)+1]
         i <- i - 1;
         x <- x %/% m
       }
       return(paste(word, collapse =''))
     }
     ## Get all words (vectorized loop)
     sapply(n, GetWord)
   }

   ## Convert to binary
   GetWords(1:10, k=4)
   ## Convert to decimal
   GetWords(1:10, k=4, alphabet=0:9)
 #+END_SRC
** TODO [[http://pbil.univ-lyon1.fr/R/pdf/exp3.pdf][nombres de Kaprekar]]
** TODO http://www.economie.gouv.fr/recrutement/aide-a-preparation-lexamen-professionnel-programmeur
 Added: [2016-12-19 lun. 13:40]

** TODO Turtle : étoile
Added: [2016-03-21 lun. 09:07]
http://villemin.gerard.free.fr/Wwwgvmm/Geometri/NbOrEtoi.htm
** TODO http://web.archive.org/web/20090227091533/http://www.math.okstate.edu/mathdept/dynamics/lecnotes/lecnotes.html
Added: [2016-02-29 lun. 11:26]
** TODO courbe de blancmanger
Added: [2016-01-14 jeu. 13:45]
https://fr.wikipedia.org/wiki/Courbe_du_blancmanger
** STARTED Le compte est bon !
http://www.dcode.fr/compte-est-bon

#+BEGIN_SRC R :results output :session cpt

  GenGame <- function(n=6) sample(append(rep(1:10, 2), 25*(1:4)), n, replace=FALSE)
  jeu <- GenGame()
  GenGoal <- function() sample(100:999, 1)
  goal <- GenGoal()
  Combine <- function(x, y) {
    r <- c(x+y, x*y)
    if(x != y) {
      r <- append(r, abs(x-y))
    }
    if(x %% y == 0) {
      r <- append(r, x %/% y)
    } else if(y %% x == 0) {
      r <- append(r, y %/% x)
    }
    return(r)
  }

  ItAllAddsUp <- function(x, y) {
    stopifnot(is.numeric(x))
    n <- length(x)
    if(n > 1) {
      for(i in seq(n-1)) {
        for(j in seq(i+1, n)) {
          z <- Combine(x[i], x[j])
          if( any(z == y) ) {
            return(TRUE)
          }
          for( zi in z) {
            x1 <- append(x[-c(i, j)], zi)
            if( ItAllAddsUp(x1, y)) {
              return(TRUE)
            }
          }
        }
      }
    }
    return(FALSE)
  }

  print(goal)
  print(jeu)
  ##ItAllAddsUp(jeu, goal)
#+END_SRC

#+RESULTS:
: [1] 801
: [1]  9  1 25  3  2  4

** IDEA https://fr.wikipedia.org/wiki/Suite_de_Conway
** IDEA http://bcb.dfci.harvard.edu/~aedin/courses/Bioconductor/
** IDEA Nlle question pour la courbe du dragon :
   rotation 180 deg. puis dessiner une 2e courbe pour la refermer !
** STARTED Sélectionner exos de http://alain.troesch.free.fr/
* Intervenants
 - Arnaud Malapert (responsable), Marie Pelleau, Kenza Benjelloun.
* Introduction

#+BEGIN_QUOTE
*/L’intelligence ce n'est pas ce que l’on sait, mais ce que l’on fait quand on ne sait pas./*
#+END_QUOTE
[[https://fr.wikipedia.org/wiki/Jean_Piaget][Jean Piaget]] , Six études de psychologie.


Ce cours est une initiation à l'algorithmique et à la programmation dans le langage R.
R est un logiciel libre[fn:1] (Projet GNU) pour la manipulation de données, le calcul numérique, les statistiques, le graphisme \dots
R propose aussi une large palette de techniques avancés : modèles linéaires et non-linéaires ; tests statistiques ; analyse de séries temporelles ; classification ; partitionnement.
R peut être étendu par les utilisateurs et de nombreuses extensions sont disponibles sur [[http://cran.r-project.org/][cran]].

En tant que scientifique, vous appliquerez des techniques dans votre cursus, puis dans votre métier, qui exigent la maîtrise des concepts fondamentaux en algorithmique et programmation. \\
En tant qu'être humain, vous utilisez déjà quotidiennement des systèmes informatiques sans nécessairement les comprendre.

Ce cours vous aidera à mieux appréhender les logiques et limites des systèmes informatiques ce qui fera de vous un meilleur utilisateur, et peut-être un programmeur ;)
\\
Ce cours est inspiré du cours de Python de Jean-Paul Roy et Bruno Martin que je remercie pour le partage.

https://phdcomics.com/comics/archive/phd051013s.gif
\\

[fn:1] Un logiciel libre est un logiciel dont l'utilisation, l'étude, la modification et la duplication par autrui en vue de sa diffusion sont permises, techniquement et légalement, ceci afin de garantir certaines libertés induites, dont le contrôle du programme par l'utilisateur et la possibilité de partage entre individus.

* Calendrier
** Semainier
 # # <iframe src="https://docs.google.com/spreadsheets/d/e/2PACX-1vRkXT89mTlc0YmNspJUF0-A8NL7ML-btloyNjWXybJOyRksMnD58qeXG_XvL28IUQ/pubhtml?gid=1769489020&amp;range=a1:q11&amp;single=true&amp;widget=true&amp;headers=false" style="border-width:0" width="900" height="360" frameborder="0" scrolling="no"></iframe>
 # # https://wp-glogin.com/2014/08/embedding-google-spreadsheets-with-more-control-over-appearance/
 #+BEGIN_EXPORT html
 <iframe src="https://docs.google.com/spreadsheets/d/e/2PACX-1vRkXT89mTlc0YmNspJUF0-A8NL7ML-btloyNjWXybJOyRksMnD58qeXG_XvL28IUQ/pubhtml?gid=1769489020&amp;range=a1:q11&amp;single=true&amp;widget=false&amp;chrome=false&amp;headers=false" style="border-width:0" width="900" height="360" frameborder="0" scrolling="no"></iframe>
 #+END_EXPORT

** Agenda

 #+BEGIN_EXPORT html
 <iframe src="https://calendar.google.com/calendar/embed?showCalendars=0&amp;mode=AGENDA&amp;height=600&amp;wkst=2&amp;bgcolor=%23FFFFFF&amp;src=g27lg2fr2i3kbmu91cn43jtdn4%40group.calendar.google.com&amp;color=%235229A3&amp;ctz=Europe%2FBrussels" style="border-width:0" width="900" height="300" frameborder="0" scrolling="no"></iframe>
 #+END_EXPORT

** Salles
   Toutes les salles du vendredi sont au 2ème et 3ème étage du Petit Valrose.
   La salle M118/120 du jeudi est à l'étage le plus bas du bâtiment M.
   Les initiales de l'intervenant sont indiquées dans la troisième colonne.

| Créneau          | Salle | Intervenant |
|------------------+-------+-------------|
| Jeu. 15h30-18h00 | ?     | ?           |
| Ven. 09h15-11h45 | ?     | ?           |
| Ven. 09h15-11h45 | ?     | ?           |
| Ven. 09h15-11h45 | ?     | ?           |
| Ven. 13h15-15h45 | ?     | ?           |
| Ven. 13h15-15h45 | ?     | ?           |


* Contenu
 #+BEGIN_EXPORT html
 <a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/"><img alt="Licence Creative Commons" style="border-width:0;margin-left:0%" src="https://licensebuttons.net/l/by-nc/4.0/88x31.png" /></a><br/>Ce cours  est mis à disposition dans ce <a rel="github repository" href="https://github.com/arnaud-m/algo-prog-R">dépôt github</a> selon les termes de la <a rel="license" href="https://creativecommons.org/licenses/by-nc/4.0/">Licence Creative Commons Attribution - Pas d’Utilisation Commerciale 4.0 International</a>.
 #+END_EXPORT

** Organisation

 1. Le matériel pédagogique est ici,
 2. Les évaluations et le carnet de notes sont sur [[https://lms.univ-cotedazur.fr/2024/course/view.php?id=7319][moodle]] et [[https://sphere-engine.com/][sphere engine]],
 3. Le code source est sur [[https://github.com/arnaud-m/algo-prog-R][github]] !
 4. On communique surtout à l'oral pendant les cours,
 5. et plus rarement par courriel pour les communications importantes.

**** Inscrivez-vous au [[https://lms.univ-cotedazur.fr/2024/course/view.php?id=7319][cours]] sur moodle !

** Autoformation

   La partie sur la représentation des nombres et les conversions de base est partiellement en autoformation.
   Les seuls pré-requis sont de savoir additionner, multiplier par 2, et diviser par 2.

   - [[file:pdf/F1-nombres.pdf][Cours sur la représentation des nombres]]

   Un cours magistral est prévu. Mais les séances de travaux dirigés sont des questionnaires moodle accessibles en distanciel pendant tout le semestre.
   L'autoformation est importante. Elle est au programme du contrôle continu et de l'examen et vous aidera aussi pour les travaux pratiques.

** Carte de référence

   Nous vous avons préparé une superbe [[file:pdf/base-r.pdf][carte de référence]] en couleurs.
   Ce sera le seul document autorisé pendant les épreuves écrites. Apprenez à vous en servir !
** Cours
   Il y a 8 cours, chacun divisé en deux parties, accompagnés de leurs travaux pratiques.
   Les corrigés des travaux pratiques seront publiés au fur et à mesure.

| #. | Cours (Partie I)         | Cours (Partie II)                       | Travaux pratiques |
|----+--------------------------+-----------------------------------------+-------------------|
| 1. | Présentation du syllabus | [[file:pdf/01-variables.pdf][Expressions, instructions, et variables]] | [[file:tp01.org][TP 1]]              |
| 2. | [[file:pdf/02-fonctions.pdf][Conditions et fonctions]]  | [[file:pdf/03-jeu-roulette.pdf][Jeu de roulette]]                         | [[file:tp02.org][TP 2]]              |
| 3. | [[file:pdf/04-iterations-while.pdf][Itérations (while)]]       | [[file:pdf/05-conversions.pdf][Conversions]]                             | [[file:tp03.org][TP 3]]              |
| 4. | [[file:pdf/06-nombres-approches.pdf][Nombres réels approchés]]  | [[file:pdf/07-calcul-pi.pdf][Approximation du nombre \pi]]             | [[file:tp04.org][TP 4]]              |
| 5. | [[file:pdf/08-iterations-for.pdf][Itérations (for)]]         | [[file:pdf/09-chaines.pdf][Chaînes de caractères]]                   | [[file:tp05.org][TP 5]]              |
| 6. | [[file:pdf/10-vecteurs.pdf][Les séquences : vecteurs]] | [[file:pdf/11-premiers.pdf][Nombres premiers]]                        | [[file:tp06.org][TP 6]]              |
| 7. | [[file:pdf/12-listes.pdf][Les séquences : listes]]   | [[file:pdf/13-dictionnaires.pdf][Ensembles et dictionnaires]]              | [[file:tp07.org][TP 7]]              |
| 8. | [[file:pdf/14-fibonacci.pdf][Suite de Fibonacci]]       |                                         | [[file:tp08.org][TP 8]]              |


** Activités

   Choisissez votre binôme sur [[https://lms.univ-cotedazur.fr/2024/course/view.php?id=7319][moodle]] pour toutes vos activités !
   Les activités sont évaluées pour le contrôle continu, mais ne sont pas au programme de l'examen.
   Les corrigés des activités ne sont pas publiés.

   Les activités ont différents niveaux de difficultés.
   Nous ne pouvons pas vraiment prédire combien de temps il vous faudra pour terminer une activité.
   Choisissez judicieusement et n'hésitez pas à demander des conseils.

   Quelques séances sont prévues pour les activités, mais l'essentiel du travail aura lieu en distanciel.
   N'hésitez pas à demander de l'aide pour choisir et réaliser les activités.

   Nous vous demandons de respecter le *code de conduite* suivant pour les activités :
     1. Citer vos sources
     2. Le partage de code est interdit sauf avec votre binôme.

*** Exercices UCAnCODE

    Les exercices UCAnCODE sont sur [[https://sphere-engine.com/][sphere engine]]. Les notes sont attribuées par le juge automatique.
    Les exercices UCAnCODE seront introduits en cours et pendant les travaux pratiques.

    - [[file:pdf/A0-ucancode.pdf][Cours d'introduction à la programmation compétitive]]

    Vous pouvez aussi suivre en autonomie le [[https://upinfo.univ-cotedazur.fr/ucancode/tutoriel/][tutoriel UCAnCODE]] si vous avez déjà des notions d'informatique ou de programmation.
    Ne paniquez pas si cela vous semble difficile au début.

Entrez votre adresse étudiante @etu.univ-cotedazur.fr dans le formulaire d'accueil.


    #+NAME: exercices
 | Problème          | Barème | Période         |
 |-------------------+--------+-----------------|
 | [[https://upinfo.univ-cotedazur.fr/ucancode/tutoriel/][Tutoriel UCAnCODE]] | -      |                 |

#+begin_comment

 |-------------------+--------+-----------------|
 | **[[https://51364960.widgets.sphere-engine.com/lp?hash=2YT9CnbZPy][JO2024]]**        | **12** | **24/10-25/10** |
 | [[https://51364960.widgets.sphere-engine.com/lp?hash=6s6sTmdXHZ][ADDREV]]            | + 1    | 24/10-25/10     |
 | [[https://51364960.widgets.sphere-engine.com/lp?hash=1L607lu5Yq][ROULETTE]]          | + 0.5  | 19/09-25/10     |
 | [[https://51364960.widgets.sphere-engine.com/lp?hash=MQZj6SbdQU][RWC2023]]           | + 0.5  | 04/10-25/10     |
 | [[https://51364960.widgets.sphere-engine.com/lp?hash=Dg1rBpfz1r][LUHN10]]            | + 0.5  | 18/10-25/10     |
 | [[https://51364960.widgets.sphere-engine.com/lp?hash=Dg1rBpfz1r][HELLOKIT]]          | + 0.5  | 18/10-25/10     |
 |-------------------+--------+-----------------|
 | **[[https://51364960.widgets.sphere-engine.com/lp?hash=iCbiokj5lK][URL]]**           | **13** | **21/11-22/11** |
 | [[https://51364960.widgets.sphere-engine.com/lp?hash=g2vkFj8IdT][TOILE]]             | + 3    | 21/11-22/11     |
 |-------------------+--------+-----------------|
 | **[[https://51364960.widgets.sphere-engine.com/lp?hash=PuC77IuuJZ][FISHNET]]**       | **13** | **05/12-06/12** |
 | [[https://51364960.widgets.sphere-engine.com/lp?hash=KoiSv8Yr1Q][DAMIER]]            | + 3    | 05/12-06/12     |
 |-------------------+--------+-----------------|
 | **[[https://51364960.widgets.sphere-engine.com/lp?hash=v3zELaYW0r][GOODIES_EZ]]**    | **14** | **05/12-12/12** |
 | [[https://51364960.widgets.sphere-engine.com/lp?hash=lMfGXki5gU][GOODIES]]           | + 3    | 05/12-12/12     |
 | Bonifications     | + 3    |                 |

L'exercice GOODIES a des bonifications pour les premiers binômes à résoudre le problème : 3pts pour le premier ; 2pts pour le second ; 1pt pour le troisième.
#+end_comment
*** Mini-projets
    Les mini-projets complètent et étendent des notions abordées en cours et vous font découvrir différentes applications.
    Vous devez déposer le projet sur moodle (un seul fichier de code source commenté) et faire une démonstration du projet.
    Le barème indique la note maximale possible pour une activité.

    #+NAME: projets
    | #. | Activité                                         | Cours | Niveau      | Barème |
    |----+--------------------------------------------------+-------+-------------+--------|
    | 1. | [[file:act01.org][Graphisme tortue]]                                 | [[file:pdf/A1-tortue.pdf][A1]]    | Tout niveau |     20 |
    | 2. | Graphisme tortue 3D                              | A2    | Difficile   |     20 |
    | 3. | [[file:act03.org][Convertisseur de base (shiny)]]                    | [[https://shiny.rstudio.com/tutorial/][A3]]    | Facile      |     12 |
    | 4. | [[file:act04.org][Coefficient de Gini (shiny)]]                      | [[https://shiny.rstudio.com/tutorial/][A3]]    | Facile      |     12 |
    | 5. | [[file:act05.org][Estimation de la moyenne (shiny)]]                 | [[https://shiny.rstudio.com/tutorial/][A3]]    | Facile      |     12 |
    | 6. | [[file:act06.org][Manipulation de polynômes]]                        | [[file:pdf/A4-Polynomes.pdf][A4]]    | Difficile   |     20 |
    | 7. | [[file:act07.org][Estimation d'aires par la méthode de Monte Carlo]] | A5    | Difficile   |     20 |

*** Bug bounty
    Toutes les contributions significatives au cours sont valables, par exemple :

    - Correction de fautes d'orthographe.
    - Correction ou amélioration des codes du cours ou des corrigés.
    - Proposition d'exercices venant d'autres disciplines (biologie, économie, gestion \dots)

    Pour soumettre une contribution, vous devez
     - rendre un devoir à l'activité /Bug Bounty/  sur moodle,
     - ou poster une [[https://github.com/arnaud-m/algo-prog-R/issues][issue]] sur github.

     La note sera intégrée comme un bonus sur la note finale.
* Contrôle des connaissances

** Épreuves écrites

   Les épreuves écrites ont des durées différentes, mais suivent les mêmes modalités d'organisation.
    - Le programme comprend l'autoformation et le cours, mais pas les activités.
    - Il n'y a pas de question de cours.
    - Le seul document autorisé est la carte de référence.

    Une épreuve écrite se structure en trois parties :
     1. les conversions de base (c.f. QCM moodle) ;
     2. les lectures de code (c.f. QCM moodle) ;
     3. des exercices de programmation dérivés des travaux pratiques du cours, mais pas des activités.

    Le barème des trois parties (X/Y/Z) somme toujours à 23, mais nous conservons votre note sur 20.


** Barème

Toutes les notes calculées sont arrondies au quart de point supérieur.

*** Première session

 - L'*examen terminal* obligatoire (note $N_t$) est une épreuve écrite de 3h (barème indicatif - 3/4/16).
 - La note $N_c$ de *contrôle continu* est la moyenne :
   - de la note maximale entre
     - la note de partiel, une épreuve écrite de 2h (barème indicatif - 4/6/12) et
     - la note d'examen terminal;
   - et des 2 meilleures notes obtenues aux activités en les pondérant par leur barème.
 - La *note finale* est $N_1 = \max(N_t, 0.4 \times N_c + 0.6 \times N_t)$

*** Seconde session

 - La *seconde chance* ($N_t^2$) est une épreuve écrite de 3h (barème indicatif - 3/4/16).
 - La *note finale* est $N_2 = \max(N_1, N_t^2, 0.2 \times N_c + 0.8 \times N_t^2)$. Elle est arrondie au quart de point supérieur.


*** Script de calcul des notes                                     :noexport:
**** Calcul des notes
***** Session 1
  #+BEGIN_SRC R :var exercices=exercices :var projets=projets :session grade

      ## Load grades from moodle
      file <- "~/download/SPUA300\ Notes-20250115_1036-comma_separated.csv"
      df <- read.csv(file, stringsAsFactors = FALSE, na.strings = c("-", "NA"), header = TRUE)
      df <- subset(df, ! is.na(df$Numéro.d.identification))
      QuarterCeiling <- function(x) ceiling(4 * x) / 4

      ## Grade CC
      indA <- (grepl("^Devoir\\.", colnames(df)) | grepl("^Exercice\\.UCAnCODE", colnames(df))) & ! grepl("Bug.Bounty", colnames(df))

      SumTwoBestGrades <- function(x) sum(tail(sort(x), 2), na.rm = TRUE)
      gradeA <- apply(df[, indA], 1, SumTwoBestGrades)
      partiel <- "Partiel.du.10.10..Brut."
      examen <-  "CT..Brut."
      gradeP <- pmax(df[ , partiel], df[ , examen], na.rm = TRUE)
      gradeCC <- QuarterCeiling((gradeA + gradeP)/3)

    ## Grade BONUS
      GradeBB <- function(bugBounties) {
          scale <- c("☆☆☆☆☆" = 0, "★☆☆☆☆" = 0.25, "★★☆☆☆" = 0.375, "★★★☆☆" = 0.5, "★★★★☆" = 0.75, "★★★★★" = 1)
          GetGradeBB <- function(stars) {
              if(is.na(stars)) return(0)
              else return(scale[stars])
          }
          unname(sapply(bugBounties, GetGradeBB))
      }

    indB <- grepl("^Bonus\\.", colnames(df))

    gradeB <-  pmin(1, pmax(0, rowSums(!is.na(df[ , indA])) - 2) / 4 + GradeBB(df$Devoir.Bug.Bounty..Brut.))
    ## gradeB [ is.na(gradeCC) ] <- NA

    ## Grade NOTE
    ComputeFinalGrade <- function(ct, cc, bo) QuarterCeiling(pmin(pmax(ct, 0.6 * ct + 0.4 * cc ) + bo, 20))

    gradeNOTE <- ComputeFinalGrade(df[ , examen], gradeCC, gradeB)


      ## Export Grades
    grades <- data.frame(
      id = df$Numéro.d.identification,
      nom = df$Nom,
      CC = gradeCC,
      BONUS= gradeB,
      NOTE=gradeNOTE
    )
    write.csv(grades, 'SPUA300-notes.csv', row.names = FALSE, na = "")


      ##    cor.test(df$CT..Brut., grades$CC, method = "pearson", use = "complete.obs")
  #+END_SRC

  #+RESULTS:
  : TRUE


***** Session 2
  #+BEGIN_SRC R :var exercices=exercices :session grade

    ## Load grades from moodle
    file <- "~/download/SPUA300 Notes-20250707_1431-comma_separated.csv"
    df <- read.csv(file, stringsAsFactors = FALSE, na.strings = c("-", "NA"), header = TRUE)
    df <- subset(df, ! is.na(df$Numéro.d.identification))
    QuarterCeiling <- function(x) ceiling(4 * x)/4

    cc1 <- df$CC..Brut.
    note1 <- df$NOTE..Brut.
    ct2 <- df$CT..Session.2...Brut.

    note2 <- QuarterCeiling(pmax(note1, ct2, 0.8 * ct2 + 0.2 * cc1, na.rm = TRUE))
    note2[ is.na(ct2) ] <- NA
    grades <- data.frame(
      id = df$Numéro.d.identification,
      NOTE2=note2
    )
          write.csv(grades, 'SPUA31-notes.csv', row.names = FALSE, na = "")



  #+END_SRC

  #+RESULTS:


**** Analyse des notes

  #+BEGIN_SRC R :session grade :results none
    file <- '~/download/SPUA300 Notes-20250115_1305-comma_separated.csv'
    df <- read.csv(file, stringsAsFactors = FALSE, na.strings = c("-", "NA"), header = TRUE)

    grades <- df[ , c("CC..Brut.", "CT..Brut.", "NOTE..Brut." )]

    colnames(grades) <- c("CC", "CT", "NOTE")

    require(ggplot2)
    require(ggthemes)
    require(grid)
    require(gridExtra)

    p1 <- ggplot(grades, aes(x=NOTE)) + geom_histogram(binwidth=2) + theme_gdocs() + theme(text = element_text(size=30))
      p2 <- ggplot(grades, aes(x=CT)) + geom_histogram(binwidth=2) + theme_gdocs() + theme(text = element_text(size=30))
      p3 <- ggplot(grades, aes(x=CC)) + geom_histogram(binwidth=2) + theme_gdocs() + theme(text = element_text(size=30))

      gsummary <- as.data.frame(apply(grades, 2, summary, digits=3))
      p4 <- tableGrob(gsummary, theme = ttheme_default(base_size=50,  padding = unit(c(25, 4), "mm"), core=list(fg_params=list(hjust=1, x=0.9))))

    toptitle <- textGrob(sprintf("SPUA300 - Algo & Prog avec R - 2024/2025 - %d étudiants - %d absents - %d acquis", nrow(grades), sum(is.na(grades$NOTE)), sum(grades$NOTE >= 10, na.rm=T)), gp=gpar(fontsize=50,font=2))

    p <- grid.arrange(p2, p1, p3, p4, nrow = 2, top = toptitle)
    ggsave('SPUA300-statistics-2024-2025.pdf', plot = p, device = "pdf", width = 40, height = 15)

  #+END_SRC

* Communication

Notre mode de communication de prédilection est la discussion lors des travaux pratiques.
Utilisez le courriel seulement pour les communications importantes ou officielles.

* Ressources électroniques
*** Ressources BU
   - [[https://catalogue.bu.univ-cotedazur.fr/permalink/f/11hf8mm/33UCA_KOHA75121][Le livre de R : apprentissage et référence]], Bernard Desgraupes.
*** Manuels, Livres, \dots

  - [[https://cran.r-project.org/doc/contrib/Goulet_introduction_programmation_R.pdf][Introduction à la programmation de R]] (V. Goulet)
  - [[https://cran.r-project.org/doc/contrib/Paradis-rdebuts_fr.pdf][R pour les débutants]] (E. Paradis)
  - [[http://cran.r-project.org/doc/contrib/Barnier-intro_R.pdf][Introduction à R]] (J. Barnier)
  - [[http://link.springer.com/book/10.1007/978-3-642-17980-8][A Tiny Handbook of R]]
  - [[http://cran.r-project.org/manuals.html][Manuels de référence]]
  - [[http://cran.r-project.org/other-docs.html][Autre Documentation sur R]] (plusieurs langues)

*** Reference Cards                                                :noexport:

 - [[http://github.com/rstudio/cheatsheets/raw/master/base-r.pdf][Base R Cheat Sheet]]
 - [[http://cran.r-project.org/doc/contrib/Baggott-refcard-v2.pdf][R Ref. Card]]
 - [[http://www.duclert.org/Aide-memoire-R/Le-langage/Introduction.php][Aide-mémoire R]]
 - [[https://github.com/rstudio/cheatsheets/raw/master/package-development.pdf][Package Development Cheat Sheet]]
 - Encore plus de cheat sheets sur https://www.rstudio.com/resources/cheatsheets/

*** Others                                                         :noexport:

  - [[http://exercism.io/languages/r/about][exercism.io]] (télécharger et résoudre des exercices)
  - [[http://larmarange.github.io/analyse-R/][Analyse R]]
  - [[http://www.dummies.com/how-to/computers-software/programming/R.html][R pour les nuls]]
  - [[http://link.springer.com/book/10.1007/978-1-4614-9020-3][The R Software]]
  - [[http://adv-r.had.co.nz/][Advanced R]]
  - [[http://cran.r-project.org/doc/contrib/Torfs%2BBrauer-Short-R-Intro.pdf][A (very) short introduction to R]] (P. Torfs and C. Brauer)

*** E-learning
  - [[https://swirlstats.com/][Swirl]] : (tutoriel interactif dans la console R)
  - [[https://www.youtube.com/playlist?list=PLqzoL9-eJTNARFXxgwbqGo56NtbJnB37A][Cours en vidéo]] (youtube)
  - Coursera [[https://www.coursera.org/learn/data-scientists-tools][Data Scientists Tools]]

https://phdcomics.com/comics/archive/phd031714s.gif
